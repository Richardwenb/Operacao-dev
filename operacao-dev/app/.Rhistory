shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(rateio_filial)
runApp()
head(rateio_filial)
runApp()
runApp()
runApp()
head(rateio_filial)
runApp()
head(rateio_filial)
runApp()
runApp()
head(rateio_filial)
runApp()
runApp()
shiny::runApp()
runApp()
head(dados)
convertTo
head(dados %>% mutate_if(is.numeric, ~round(., 2)))
head(dados %>% mutate_if(is.numeric, ~/1000))
select_if(dados, is.numeric)
dados[select_if(dados, is.numeric)]
dados[select_if(dados, is.numeric),]
dados[,select_if(dados, is.numeric)]
iris[sapply(dados, is.numeric)]
dados[sapply(dados, is.numeric)]
dados[sapply(dados, is.numeric)] = dados[sapply(dados, is.numeric)]/1000
head(dados)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
con <- tryCatch({ dbConnect(RMariaDB::MariaDB(), host = "192.168.235.20", user = "server",
password="R*proj2018", dbname='consensodev')   }, error = function(err) { return("") })
res <- dbSendQuery(con, paste0("SELECT * from produto;"))
bonificacao = dbFetch(res);
library(cls)
library(xlsx)
write.xlsx(bonificacao, "/home/projetor/teste.xlsx")
runApp()
runApp()
err
produtos = dbGetQuery(con, "select id_produto from produto");
dados[!(dados$COD %in% produtos$id_produto),]
dados[!(dados$COD %in% produtos$id_produto),1]
unique(dados[!(dados$COD %in% produtos$id_produto),1]:2)
unique(dados[!(dados$COD %in% produtos$id_produto),1:2])
unique(dados[!(dados$COD %in% produtos$id_produto),1:2])
unique(dados[!(dados$COD %in% produtos$id_produto),1])
paste(unique(dados[!(dados$COD %in% produtos$id_produto),1]))
paste0("Os seguintes SKUs precisam se cadastrados no Planner: "unique(dados[!(dados$COD %in% produtos$id_produto),1]))
paste0("Os seguintes SKUs precisam se cadastrados no Planner: ", unique(dados[!(dados$COD %in% produtos$id_produto),1]))
paste0("Os seguintes SKUs precisam se cadastrados no Planner: ", unique(dados[!(dados$COD %in% produtos$id_produto),]$COD))
paste0("Os seguintes SKUs precisam se cadastrados no Planner: ", paste(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD)))
paste(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD))
paste0(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD))
paste0(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD), collapse = "")
paste0(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD), collapse = " ")
paste0("Os seguintes SKUs precisam se cadastrados no Planner: ", paste(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD), collapse = " "))
paste0("Os seguintes SKUs precisam se cadastrados no Planner: ", paste(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD), collapse = ", "))
paste0("Os seguintes SKUs precisam se cadastrados no Planner: ", paste(unique(dados[!(dados$COD %in% produtos$id_produto),]$COD), collapse = ", "), ". Entre em contado com Adm de Vendas.")
runApp()
runApp()
prod_n_cadastrado
runApp()
runApp()
shiny::runApp()
head
head(dados)
dados %>% group_by(DATA) %>% summarise(sum(VALOR))
query
runApp()
runApp()
rateio_filial[rateio_filial$COD == 'W55',]
runApp()
rateio_filial[rateio_filial$COD == 'W55',]
runApp()
rateio_filial[rateio_filial$COD == 'W55',]
runApp()
runApp()
